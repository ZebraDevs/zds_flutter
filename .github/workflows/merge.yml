name: "Merge"

on:
  pull_request:
    types: [closed]

jobs:
  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event.pull_request.merged
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get all changed *.dart, files in docs or pubspec.yaml
        id: changed-files
        uses: tj-actions/changed-files@v37
        with:
          base_sha: ${{ github.event.pull_request.base.sha }}
          sha: ${{ github.event.pull_request.head.sha }}
          files: |
            **/*.dart
            pubspec.yaml
  merge:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: changes
    if: needs.changes.outputs.files == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1.5.0
      - name: install cider
        run: dart pub global activate cider
      - name: Change flutter version tag
        run: |
          echo "FLUTTER_BUILD_VERSION=$(cider bump patch --bump-build)" >> "$GITHUB_ENV"
      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.PAT }}
          tag: ${{ steps.read-version.outputs.version-number }}
          excludeTypes: ""
          includeInvalidCommits: true
      - name: Update
        id: update
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add -A
          git commit --amend --no-edit
          git push -f
          echo "newSha=$(git rev-parse ${{github.event.pull_request.head.sha}})" >>  $GITHUB_ENV
      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{env.FLUTTER_BUILD_VERSION}}',
              sha: "${{env.newSha}}"
            })
      - name: release
        uses: actions/github-script@v5
        if: ${{ (steps.bump.outputs.release == 'true') && (env.modified == 'true') }}
        with:
          script: |
            github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: "${{steps.bump.outputs.version}}",
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: "${{steps.bump.outputs.version}}",
              });
  build_and_deploy:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    needs: merge
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.x"
          channel: "stable"
      - name: Setup flutter
        run: flutter pub get
      - name: build
        run: |
          cd example
          flutter build web -o ../build --no-tree-shake-icons --base-href "/zds_flutter/"
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
